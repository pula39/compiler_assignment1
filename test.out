('Vtype', 'int')
('WHITE SPACE', ' ')
('ID', 'hello')
('LPAREN', '(')
('Vtype', 'char')
('WHITE SPACE', ' ')
('ID', 'chMark')
('COMMA', ',')
('WHITE SPACE', ' ')
('Vtype', 'int')
('WHITE SPACE', ' ')
('ID', 'iNum')
('RPAREN', ')')
('Semicolon', ';')
('WHITE SPACE', '   \n\n')
('Vtype', 'int')
('WHITE SPACE', ' ')
('ID', 'main')
('LPAREN', '(')
('RPAREN', ')')
('LCURBRACKET', '{')
('WHITE SPACE', '\n  ')
('Vtype', 'int')
('WHITE SPACE', ' ')
('ID', 'a')
('COMMA', ',')
('WHITE SPACE', ' ')
('ID', 'b')
('COMMA', ',')
('WHITE SPACE', ' ')
('ID', 'c')
('COMMA', ',')
('WHITE SPACE', ' ')
('ID', 'aa')
('Semicolon', ';')
('WHITE SPACE', '\n  ')
('Vtype', 'float')
('WHITE SPACE', ' ')
('ID', 'abc123')
('COMMA', ',')
('WHITE SPACE', ' ')
('ID', 'abc_123')
('COMMA', ',')
('WHITE SPACE', ' ')
('ID', 'abc__')
('Semicolon', ';')
('WHITE SPACE', '\n  ')
('Vtype', 'bool')
('WHITE SPACE', ' ')
('ID', 'is_true')
('COMMA', ',')
('WHITE SPACE', ' ')
('ID', 'is_false')
('Semicolon', ';')
('WHITE SPACE', '\n  ')
('Vtype', 'char')
('WHITE SPACE', ' ')
('ID', '_str')
('Semicolon', ';')
('WHITE SPACE', '\n\n  ')
('ID', 'a')
('WHITE SPACE', ' ')
('Assign', '=')
('WHITE SPACE', ' ')
('Integer', '0')
('Semicolon', ';')
('WHITE SPACE', '\n  ')
('ID', 'b')
('WHITE SPACE', ' ')
('Assign', '=')
('WHITE SPACE', ' ')
('Integer', '1')
('Semicolon', ';')
('WHITE SPACE', '\n  ')
('ID', 'c')
('WHITE SPACE', ' ')
('Assign', '=')
('WHITE SPACE', ' ')
('Integer', '123')
('Semicolon', ';')
('WHITE SPACE', '\n  ')
('ID', 'aa')
('WHITE SPACE', ' ')
('Assign', '=')
('WHITE SPACE', ' ')
('Integer', '-1234')
('WHITE SPACE', '\n\n  ')
('ID', '_str')
('WHITE SPACE', ' ')
('Assign', '=')
('WHITE SPACE', ' ')
('Literal', '"My student id is 12345678"')
('Semicolon', ';')
('WHITE SPACE', '\n  ')
('ID', 'is_true')
('WHITE SPACE', ' ')
('Assign', '=')
('WHITE SPACE', ' ')
('ID', 'true')
('Semicolon', ';')
('WHITE SPACE', '\n  ')
('ID', 'is_false')
('WHITE SPACE', ' ')
('Assign', '=')
('WHITE SPACE', ' ')
('ID', 'false')
('Semicolon', ';')
('WHITE SPACE', '\n\n  ')
('ID', 'abc123')
('WHITE SPACE', ' ')
('Assign', '=')
('WHITE SPACE', ' ')
('Float', '0.0')
('Semicolon', ';')
('WHITE SPACE', '\n  ')
('ID', 'abc_123')
('WHITE SPACE', ' ')
('Assign', '=')
('WHITE SPACE', ' ')
('Float', '123.000001')
('Semicolon', ';')
('WHITE SPACE', '\n  ')
('ID', 'abc__')
('WHITE SPACE', ' ')
('Assign', '=')
('WHITE SPACE', ' ')
('Float', '-1235.1223155')
('Semicolon', ';')
('WHITE SPACE', '\n\n  ')
('Keyword stmt', 'if')
('WHITE SPACE', ' ')
('LPAREN', '(')
('ID', 'is_true')
('WHITE SPACE', '  ')
('Comparison operator', '==')
('WHITE SPACE', ' ')
('ID', 'ture')
('RPAREN', ')')
('LCURBRACKET', '{')
('WHITE SPACE', '\n    ')
('ID', 'a')
('WHITE SPACE', ' ')
('Assign', '=')
('WHITE SPACE', ' ')
('ID', 'a')
('WHITE SPACE', ' ')
('Arthimatic operator', '+')
('WHITE SPACE', ' ')
('Integer', '1')
('Semicolon', ';')
('WHITE SPACE', '\n    ')
('ID', 'abc123')
('WHITE SPACE', ' ')
('Assign', '=')
('WHITE SPACE', ' ')
('Float', '21.5')
('WHITE SPACE', ' ')
('Arthimatic operator', '*')
('WHITE SPACE', ' ')
('Float', '3.2')
('Semicolon', ';')
('WHITE SPACE', '\n    ')
('ID', 'c')
('WHITE SPACE', ' ')
('Assign', '=')
('WHITE SPACE', ' ')
('Integer', '234')
('WHITE SPACE', ' ')
('Arthimatic operator', '/')
('WHITE SPACE', ' ')
('Integer', '22')
('Semicolon', ';')
('WHITE SPACE', '\n    ')
('ID', 'aa')
('WHITE SPACE', ' ')
('Assign', '=')
('WHITE SPACE', ' ')
('Integer', '123')
('WHITE SPACE', ' ')
('Arthimatic operator', '-')
('WHITE SPACE', ' ')
('Integer', '123')
('Semicolon', ';')
('WHITE SPACE', '\n  ')
('RCURBRACKET', '}')
('WHITE SPACE', '\n  ')
('Keyword stmt', 'else')
('LCURBRACKET', '{')
('WHITE SPACE', '\n    ')
('ID', 'a')
('WHITE SPACE', ' ')
('Assign', '=')
('WHITE SPACE', ' ')
('ID', 'a')
('WHITE SPACE', ' ')
('Arthimatic operator', '+')
('WHITE SPACE', ' ')
('Integer', '-1')
('Semicolon', ';')
('WHITE SPACE', '\n  ')
('RCURBRACKET', '}')
('WHITE SPACE', '\n\n  ')
('Keyword stmt', 'while')
('LPAREN', '(')
('ID', 'is_false')
('RPAREN', ')')
('LCURBRACKET', '{')
('WHITE SPACE', '\n    ')
('ID', 'a')
('WHITE SPACE', ' ')
('Assign', '=')
('WHITE SPACE', ' ')
('ID', 'a')
('WHITE SPACE', ' ')
('Bitwise operator', '<<')
('WHITE SPACE', ' ')
('Integer', '1')
('Semicolon', ';')
('WHITE SPACE', '\n    ')
('ID', 'a')
('WHITE SPACE', ' ')
('Assign', '=')
('WHITE SPACE', ' ')
('ID', 'a')
('WHITE SPACE', ' ')
('Bitwise operator', '>>')
('WHITE SPACE', ' ')
('Integer', '1')
('Semicolon', ';')
('WHITE SPACE', '\n    ')
('ID', 'a')
('WHITE SPACE', ' ')
('Assign', '=')
('WHITE SPACE', ' ')
('ID', 'a')
('WHITE SPACE', ' ')
('Bitwise operator', '&')
('WHITE SPACE', ' ')
('ID', 'a')
('Semicolon', ';')
('WHITE SPACE', '\n    ')
('ID', 'a')
('WHITE SPACE', ' ')
('Assign', '=')
('WHITE SPACE', ' ')
('ID', 'a')
('WHITE SPACE', ' ')
('Bitwise operator', '|')
('WHITE SPACE', ' ')
('ID', 'a')
('Semicolon', ';')
('WHITE SPACE', '\n  ')
('RCURBRACKET', '}')
('WHITE SPACE', '\n\n  ')
('Keyword stmt', 'for')
('LPAREN', '(')
('WHITE SPACE', ' ')
('Vtype', 'int')
('WHITE SPACE', ' ')
('ID', 'i')
('WHITE SPACE', ' ')
('Assign', '=')
('WHITE SPACE', ' ')
('Integer', '0')
('WHITE SPACE', ' ')
('Semicolon', ';')
('WHITE SPACE', ' ')
('ID', 'i')
('WHITE SPACE', ' ')
('Comparison operator', '<')
('WHITE SPACE', ' ')
('Integer', '5')
('Semicolon', ';')
('WHITE SPACE', ' ')
('ID', 'i')
('Arthimatic operator', '+')
('Arthimatic operator', '+')
('RPAREN', ')')
('LCURBRACKET', '{')
('WHITE SPACE', '\n    ')
('Keyword stmt', 'if')
('LPAREN', '(')
('WHITE SPACE', ' ')
('ID', 'i')
('WHITE SPACE', ' ')
('Comparison operator', '==')
('WHITE SPACE', ' ')
('Integer', '1')
('RPAREN', ')')
('LCURBRACKET', '{')
('WHITE SPACE', '\n      ')
('ID', 'a')
('WHITE SPACE', ' ')
('Assign', '=')
('WHITE SPACE', ' ')
('ID', 'a')
('WHITE SPACE', '\n    ')
('RCURBRACKET', '}')
('WHITE SPACE', '\n    ')
('Keyword stmt', 'if')
('LPAREN', '(')
('WHITE SPACE', ' ')
('ID', 'i')
('WHITE SPACE', ' ')
('Comparison operator', '!=')
('WHITE SPACE', ' ')
('Integer', '1')
('RPAREN', ')')
('LCURBRACKET', '{')
('WHITE SPACE', '\n      ')
('ID', 'abc123')
('WHITE SPACE', ' ')
('Assign', '=')
('WHITE SPACE', ' ')
('Float', '-0.123123')
('WHITE SPACE', '\n    ')
('RCURBRACKET', '}')
('WHITE SPACE', '\n    ')
('Keyword stmt', 'if')
('LPAREN', '(')
('WHITE SPACE', ' ')
('ID', 'i')
('WHITE SPACE', ' ')
('Comparison operator', '>')
('WHITE SPACE', ' ')
('Integer', '1')
('RPAREN', ')')
('LCURBRACKET', '{')
('WHITE SPACE', '\n      ')
('ID', 'abc123')
('WHITE SPACE', ' ')
('Assign', '=')
('WHITE SPACE', ' ')
('Float', '-1109.123123')
('WHITE SPACE', '\n    ')
('RCURBRACKET', '}')
('WHITE SPACE', '\n    ')
('Keyword stmt', 'if')
('LPAREN', '(')
('WHITE SPACE', ' ')
('ID', 'i')
('WHITE SPACE', ' ')
('Comparison operator', '<')
('WHITE SPACE', ' ')
('Integer', '1')
('RPAREN', ')')
('LCURBRACKET', '{')
('WHITE SPACE', '\n      ')
('ID', 'abc__')
('WHITE SPACE', ' ')
('Assign', '=')
('WHITE SPACE', ' ')
('Float', '-1234563798.0')
('WHITE SPACE', '\n    ')
('RCURBRACKET', '}')
('WHITE SPACE', '\n    ')
('Keyword stmt', 'if')
('LPAREN', '(')
('WHITE SPACE', ' ')
('ID', 'i')
('WHITE SPACE', ' ')
('Comparison operator', '>=')
('WHITE SPACE', ' ')
('Integer', '1')
('RPAREN', ')')
('LCURBRACKET', '{')
('WHITE SPACE', '\n      ')
('ID', 'a')
('WHITE SPACE', ' ')
('Assign', '=')
('WHITE SPACE', ' ')
('Integer', '5')
('WHITE SPACE', ' ')
('Arthimatic operator', '-')
('WHITE SPACE', ' ')
('Integer', '-6')
('WHITE SPACE', '\n    ')
('RCURBRACKET', '}')
('WHITE SPACE', '\n    ')
('Keyword stmt', 'if')
('LPAREN', '(')
('WHITE SPACE', ' ')
('ID', 'i')
('WHITE SPACE', ' ')
('Comparison operator', '<=')
('WHITE SPACE', ' ')
('Integer', '1')
('RPAREN', ')')
('LCURBRACKET', '{')
('WHITE SPACE', '\n      ')
('ID', 'abc__')
('WHITE SPACE', ' ')
('Assign', '=')
('WHITE SPACE', ' ')
('Float', '5.2')
('WHITE SPACE', ' ')
('Arthimatic operator', '-')
('WHITE SPACE', ' ')
('Float', '-12.0')
('WHITE SPACE', '\n    ')
('RCURBRACKET', '}')
('WHITE SPACE', '\n  ')
('RCURBRACKET', '}')
('WHITE SPACE', '\n\n  ')
('ID', 'hello')
('LPAREN', '(')
('ID', '_str')
('COMMA', ',')
('WHITE SPACE', ' ')
('ID', 'a')
('RPAREN', ')')
('Semicolon', ';')
('WHITE SPACE', '\n  ')
('Keyword stmt', 'return')
('WHITE SPACE', ' ')
('Integer', '0')
('Semicolon', ';')
('WHITE SPACE', '\n')
('RCURBRACKET', '}')
('WHITE SPACE', '\n\n\n')
('Vtype', 'int')
('WHITE SPACE', ' ')
('ID', 'hello')
('LPAREN', '(')
('Vtype', 'char')
('WHITE SPACE', ' ')
('ID', 'chMark')
('COMMA', ',')
('WHITE SPACE', ' ')
('Vtype', 'int')
('WHITE SPACE', ' ')
('ID', 'iNum')
('RPAREN', ')')
('WHITE SPACE', '  \n')
('LCURBRACKET', '{')
('WHITE SPACE', '\n   ')
('Keyword stmt', 'return')
('WHITE SPACE', ' ')
('ID', 'iNum')
('Semicolon', ';')
('WHITE SPACE', '\n')
('RCURBRACKET', '}')
