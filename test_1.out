{"body": [["WHITE_SPACE", "\n", 1], ["vtype", "int", 4], ["WHITE_SPACE", " ", 5], ["id", "b", 6], ["WHITE_SPACE", " ", 7], ["assign", "=", 8], ["WHITE_SPACE", " ", 9], ["lparen", "(", 10], ["num", "100", 13], ["multdiv", "/", 14], ["num", "30", 16], ["rparen", ")", 17], ["semi", ";", 18], ["WHITE_SPACE", "\n", 19], ["vtype", "int", 22], ["WHITE_SPACE", " ", 23], ["id", "c", 24], ["WHITE_SPACE", " ", 25], ["assign", "=", 26], ["WHITE_SPACE", " ", 27], ["id", "z", 28], ["semi", ";", 29], ["WHITE_SPACE", "\n", 30], ["vtype", "int", 33], ["WHITE_SPACE", " ", 34], ["id", "d", 35], ["WHITE_SPACE", " ", 36], ["assign", "=", 37], ["WHITE_SPACE", " ", 38], ["num", "100", 41], ["WHITE_SPACE", " ", 42], ["addsub", "+", 43], ["WHITE_SPACE", " ", 44], ["num", "100", 47], ["semi", ";", 48], ["WHITE_SPACE", "\n", 49], ["vtype", "int", 52], ["WHITE_SPACE", " ", 53], ["id", "e", 54], ["WHITE_SPACE", " ", 55], ["assign", "=", 56], ["WHITE_SPACE", " ", 57], ["num", "100", 60], ["WHITE_SPACE", " ", 61], ["addsub", "-", 62], ["WHITE_SPACE", " ", 63], ["num", "100", 66], ["semi", ";", 67], ["WHITE_SPACE", "\n", 68], ["vtype", "int", 71], ["WHITE_SPACE", " ", 72], ["id", "f", 73], ["WHITE_SPACE", " ", 74], ["assign", "=", 75], ["WHITE_SPACE", " ", 76], ["num", "100", 79], ["WHITE_SPACE", " ", 80], ["multdiv", "*", 81], ["WHITE_SPACE", " ", 82], ["num", "100", 85], ["semi", ";", 86], ["WHITE_SPACE", "\n", 87], ["vtype", "int", 90], ["WHITE_SPACE", " ", 91], ["id", "g", 92], ["WHITE_SPACE", " ", 93], ["assign", "=", 94], ["WHITE_SPACE", " ", 95], ["num", "100", 98], ["multdiv", "*", 99], ["lparen", "(", 100], ["num", "100", 103], ["multdiv", "*", 104], ["num", "100", 107], ["rparen", ")", 108], ["semi", ";", 109], ["WHITE_SPACE", "\n\n", 111], ["vtype", "int", 114], ["WHITE_SPACE", " ", 115], ["id", "sstr", 119], ["WHITE_SPACE", " ", 120], ["assign", "=", 121], ["WHITE_SPACE", " ", 122], ["literal", "\"aa\"", 126], ["semi", ";", 127], ["WHITE_SPACE", "\n", 128], ["vtype", "char", 132], ["WHITE_SPACE", " ", 133], ["id", "ssstr", 138], ["WHITE_SPACE", " ", 139], ["assign", "=", 140], ["WHITE_SPACE", " ", 141], ["literal", "\"aaa\"", 146], ["semi", ";", 147], ["WHITE_SPACE", "\n\n", 149], ["vtype", "float", 154], ["WHITE_SPACE", " ", 155], ["id", "main", 159], ["lparen", "(", 160], ["vtype", "float", 165], ["WHITE_SPACE", " ", 166], ["id", "r", 167], ["comma", ",", 168], ["WHITE_SPACE", " ", 169], ["vtype", "float", 174], ["WHITE_SPACE", " ", 175], ["id", "b", 176], ["rparen", ")", 177], ["lbrace", "{", 178], ["WHITE_SPACE", "\n\n    ", 184], ["vtype", "int", 187], ["WHITE_SPACE", " ", 188], ["id", "a", 189], ["WHITE_SPACE", " ", 190], ["assign", "=", 191], ["WHITE_SPACE", " ", 192], ["num", "100", 195], ["multdiv", "/", 196], ["num", "30", 198], ["semi", ";", 199], ["WHITE_SPACE", "\n\n    ", 205], ["if", "if", 207], ["lparen", "(", 208], ["WHITE_SPACE", " ", 209], ["id", "a", 210], ["WHITE_SPACE", " ", 211], ["comp", ">", 212], ["WHITE_SPACE", " ", 213], ["id", "b", 214], ["rparen", ")", 215], ["lbrace", "{", 216], ["WHITE_SPACE", "\n        ", 225], ["id", "a", 226], ["WHITE_SPACE", " ", 227], ["assign", "=", 228], ["WHITE_SPACE", " ", 229], ["num", "30", 231], ["semi", ";", 232], ["WHITE_SPACE", "\n    ", 237], ["rbrace", "}", 238], ["WHITE_SPACE", "\n    ", 243], ["else", "else", 247], ["lbrace", "{", 248], ["WHITE_SPACE", "\n        ", 257], ["id", "a", 258], ["WHITE_SPACE", " ", 259], ["assign", "=", 260], ["WHITE_SPACE", " ", 261], ["num", "20", 263], ["semi", ";", 264], ["WHITE_SPACE", "\n    ", 269], ["rbrace", "}", 270], ["WHITE_SPACE", "\n\n    ", 276], ["while", "while", 281], ["lparen", "(", 282], ["WHITE_SPACE", " ", 283], ["id", "a", 284], ["WHITE_SPACE", " ", 285], ["comp", ">", 286], ["WHITE_SPACE", " ", 287], ["id", "b", 288], ["rparen", ")", 289], ["lbrace", "{", 290], ["WHITE_SPACE", "\n        ", 299], ["id", "a", 300], ["WHITE_SPACE", " ", 301], ["assign", "=", 302], ["WHITE_SPACE", " ", 303], ["num", "30", 305], ["semi", ";", 306], ["WHITE_SPACE", "\n    ", 311], ["rbrace", "}", 312], ["WHITE_SPACE", "\n\n    ", 318], ["for", "for", 321], ["lparen", "(", 322], ["id", "i", 323], ["WHITE_SPACE", " ", 324], ["assign", "=", 325], ["WHITE_SPACE", " ", 326], ["num", "0", 327], ["WHITE_SPACE", " ", 328], ["semi", ";", 329], ["WHITE_SPACE", " ", 330], ["lparen", "(", 331], ["id", "i", 332], ["addsub", "+", 333], ["num", "3", 334], ["rparen", ")", 335], ["WHITE_SPACE", " ", 336], ["comp", "<", 337], ["WHITE_SPACE", " ", 338], ["num", "30", 340], ["semi", ";", 341], ["WHITE_SPACE", " ", 342], ["id", "i", 343], ["WHITE_SPACE", " ", 344], ["assign", "=", 345], ["WHITE_SPACE", " ", 346], ["id", "i", 347], ["WHITE_SPACE", " ", 348], ["addsub", "+", 349], ["WHITE_SPACE", " ", 350], ["num", "1", 351], ["rparen", ")", 352], ["lbrace", "{", 353], ["WHITE_SPACE", "\n        ", 362], ["id", "i", 363], ["WHITE_SPACE", " ", 364], ["assign", "=", 365], ["WHITE_SPACE", " ", 366], ["id", "i", 367], ["multdiv", "*", 368], ["num", "2", 369], ["semi", ";", 370], ["WHITE_SPACE", "\n    ", 375], ["rbrace", "}", 376], ["WHITE_SPACE", "\n\n    ", 382], ["return", "return", 388], ["WHITE_SPACE", " ", 389], ["id", "r", 390], ["semi", ";", 391], ["WHITE_SPACE", "\n", 392], ["rbrace", "}", 393]], "original": "\nint b = (100/30);\nint c = z;\nint d = 100 + 100;\nint e = 100 - 100;\nint f = 100 * 100;\nint g = 100*(100*100);\n\nint sstr = \"aa\";\nchar ssstr = \"aaa\";\n\nfloat main(float r, float b){\n\n    int a = 100/30;\n\n    if( a > b){\n        a = 30;\n    }\n    else{\n        a = 20;\n    }\n\n    while( a > b){\n        a = 30;\n    }\n\n    for(i = 0 ; (i+3) < 30; i = i + 1){\n        i = i*2;\n    }\n\n    return r;\n}"}