{"body": [["WHITE_SPACE", "\n", 1], ["vtype", "int", 4], ["WHITE_SPACE", " ", 5], ["id", "a", 6], ["WHITE_SPACE", " ", 7], ["assign", "=", 8], ["WHITE_SPACE", " ", 9], ["lparen", "(", 10], ["num", "100", 13], ["multdiv", "/", 14], ["num", "30", 16], ["rparen", ")", 17], ["semi", ";", 18], ["WHITE_SPACE", "\n", 19], ["vtype", "int", 22], ["WHITE_SPACE", " ", 23], ["id", "b", 24], ["WHITE_SPACE", " ", 25], ["assign", "=", 26], ["WHITE_SPACE", " ", 27], ["num", "100", 30], ["multdiv", "*", 31], ["lparen", "(", 32], ["num", "100", 35], ["multdiv", "*", 36], ["num", "100", 39], ["rparen", ")", 40], ["semi", ";", 41], ["WHITE_SPACE", "\n", 42], ["vtype", "int", 45], ["WHITE_SPACE", " ", 46], ["id", "c", 47], ["WHITE_SPACE", " ", 48], ["assign", "=", 49], ["WHITE_SPACE", " ", 50], ["num", "100", 53], ["WHITE_SPACE", " ", 54], ["multdiv", "*", 55], ["WHITE_SPACE", " ", 56], ["num", "100", 59], ["semi", ";", 60], ["WHITE_SPACE", "\n\n", 62], ["vtype", "char", 66], ["WHITE_SPACE", " ", 67], ["id", "str_1", 72], ["WHITE_SPACE", " ", 73], ["assign", "=", 74], ["WHITE_SPACE", " ", 75], ["literal", "\"hello 1\"", 84], ["semi", ";", 85], ["WHITE_SPACE", "\n\n\n", 88], ["vtype", "int", 91], ["WHITE_SPACE", " ", 92], ["id", "main", 96], ["lparen", "(", 97], ["vtype", "float", 102], ["WHITE_SPACE", " ", 103], ["id", "_input1", 110], ["comma", ",", 111], ["WHITE_SPACE", " ", 112], ["vtype", "int", 115], ["WHITE_SPACE", " ", 116], ["id", "_input2", 123], ["rparen", ")", 124], ["lbrace", "{", 125], ["WHITE_SPACE", "\n\n    ", 131], ["vtype", "char", 135], ["WHITE_SPACE", " ", 136], ["id", "str_2", 141], ["WHITE_SPACE", " ", 142], ["assign", "=", 143], ["WHITE_SPACE", " ", 144], ["literal", "\"hello 2\"", 153], ["semi", ";", 154], ["WHITE_SPACE", "\n    ", 159], ["vtype", "float", 164], ["WHITE_SPACE", " ", 165], ["id", "input1", 171], ["WHITE_SPACE", " ", 172], ["assign", "=", 173], ["WHITE_SPACE", " ", 174], ["id", "_input1", 181], ["semi", ";", 182], ["WHITE_SPACE", "\n    ", 187], ["vtype", "int", 190], ["WHITE_SPACE", " ", 191], ["id", "input2", 197], ["WHITE_SPACE", " ", 198], ["assign", "=", 199], ["WHITE_SPACE", " ", 200], ["id", "_input2", 207], ["semi", ";", 208], ["WHITE_SPACE", "\n    \n\n    ", 219], ["if", "if", 221], ["lparen", "(", 222], ["id", "a", 223], ["WHITE_SPACE", " ", 224], ["comp", ">", 225], ["WHITE_SPACE", " ", 226], ["id", "b", 227], ["rparen", ")", 228], ["lbrace", "{", 229], ["WHITE_SPACE", "\n        ", 238], ["id", "a", 239], ["WHITE_SPACE", " ", 240], ["assign", "=", 241], ["WHITE_SPACE", " ", 242], ["num", "30", 244], ["semi", ";", 245], ["WHITE_SPACE", "\n\n        ", 255], ["while", "while", 260], ["lparen", "(", 261], ["id", "a", 262], ["WHITE_SPACE", " ", 263], ["comp", ">", 264], ["WHITE_SPACE", " ", 265], ["id", "b", 266], ["rparen", ")", 267], ["lbrace", "{", 268], ["WHITE_SPACE", "\n            ", 281], ["id", "a", 282], ["WHITE_SPACE", " ", 283], ["assign", "=", 284], ["WHITE_SPACE", " ", 285], ["id", "a", 286], ["WHITE_SPACE", " ", 287], ["multdiv", "/", 288], ["WHITE_SPACE", " ", 289], ["num", "2", 290], ["semi", ";", 291], ["WHITE_SPACE", "\n        ", 300], ["rbrace", "}", 301], ["WHITE_SPACE", "\n    ", 306], ["rbrace", "}", 307], ["WHITE_SPACE", "\n    ", 312], ["else", "else", 316], ["lbrace", "{", 317], ["WHITE_SPACE", "\n        ", 326], ["id", "a", 327], ["WHITE_SPACE", " ", 328], ["assign", "=", 329], ["WHITE_SPACE", " ", 330], ["id", "a", 331], ["multdiv", "/", 332], ["num", "3", 333], ["semi", ";", 334], ["WHITE_SPACE", "\n    ", 339], ["rbrace", "}", 340], ["WHITE_SPACE", "\n\n    ", 346], ["for", "for", 349], ["lparen", "(", 350], ["id", "i", 351], ["WHITE_SPACE", " ", 352], ["assign", "=", 353], ["WHITE_SPACE", " ", 354], ["num", "0", 355], ["WHITE_SPACE", " ", 356], ["semi", ";", 357], ["WHITE_SPACE", " ", 358], ["lparen", "(", 359], ["id", "i", 360], ["addsub", "+", 361], ["num", "3", 362], ["rparen", ")", 363], ["WHITE_SPACE", " ", 364], ["comp", "<", 365], ["WHITE_SPACE", " ", 366], ["num", "30", 368], ["semi", ";", 369], ["WHITE_SPACE", " ", 370], ["id", "i", 371], ["WHITE_SPACE", " ", 372], ["assign", "=", 373], ["WHITE_SPACE", " ", 374], ["id", "i", 375], ["WHITE_SPACE", " ", 376], ["addsub", "+", 377], ["WHITE_SPACE", " ", 378], ["num", "1", 379], ["rparen", ")", 380], ["lbrace", "{", 381], ["WHITE_SPACE", "\n        ", 390], ["for", "for", 393], ["lparen", "(", 394], ["id", "j", 395], ["WHITE_SPACE", " ", 396], ["assign", "=", 397], ["WHITE_SPACE", " ", 398], ["num", "0", 399], ["semi", ";", 400], ["WHITE_SPACE", " ", 401], ["id", "j", 402], ["WHITE_SPACE", " ", 403], ["comp", "<", 404], ["num", "10", 406], ["semi", ";", 407], ["WHITE_SPACE", " ", 408], ["id", "j", 409], ["WHITE_SPACE", " ", 410], ["assign", "=", 411], ["WHITE_SPACE", " ", 412], ["id", "j", 413], ["WHITE_SPACE", " ", 414], ["addsub", "+", 415], ["WHITE_SPACE", " ", 416], ["num", "1", 417], ["rparen", ")", 418], ["lbrace", "{", 419], ["WHITE_SPACE", "\n            ", 432], ["id", "k", 433], ["WHITE_SPACE", " ", 434], ["assign", "=", 435], ["WHITE_SPACE", " ", 436], ["num", "10", 438], ["semi", ";", 439], ["WHITE_SPACE", "\n            ", 452], ["while", "while", 457], ["lparen", "(", 458], ["id", "k", 459], ["WHITE_SPACE", " ", 460], ["comp", ">", 461], ["WHITE_SPACE", " ", 462], ["num", "1", 463], ["rparen", ")", 464], ["lbrace", "{", 465], ["WHITE_SPACE", "\n                ", 482], ["id", "a", 483], ["WHITE_SPACE", " ", 484], ["assign", "=", 485], ["WHITE_SPACE", " ", 486], ["id", "a", 487], ["WHITE_SPACE", " ", 488], ["addsub", "+", 489], ["WHITE_SPACE", " ", 490], ["id", "i", 491], ["multdiv", "*", 492], ["id", "j", 493], ["multdiv", "/", 494], ["id", "k", 495], ["semi", ";", 496], ["WHITE_SPACE", "\n                ", 513], ["id", "k", 514], ["WHITE_SPACE", " ", 515], ["assign", "=", 516], ["WHITE_SPACE", " ", 517], ["id", "k", 518], ["WHITE_SPACE", " ", 519], ["addsub", "-", 520], ["WHITE_SPACE", " ", 521], ["num", "1", 522], ["semi", ";", 523], ["WHITE_SPACE", "\n            ", 536], ["rbrace", "}", 537], ["WHITE_SPACE", "\n        ", 546], ["rbrace", "}", 547], ["WHITE_SPACE", "\n    ", 552], ["rbrace", "}", 553], ["WHITE_SPACE", "\n\n    ", 559], ["return", "return", 565], ["WHITE_SPACE", " ", 566], ["lparen", "(", 567], ["id", "a", 568], ["multdiv", "*", 569], ["id", "a", 570], ["addsub", "-", 571], ["id", "a", 572], ["rparen", ")", 573], ["semi", ";", 574], ["WHITE_SPACE", "\n", 575], ["rbrace", "}", 576]], "original": "\nint a = (100/30);\nint b = 100*(100*100);\nint c = 100 * 100;\n\nchar str_1 = \"hello 1\";\n\n\nint main(float _input1, int _input2){\n\n    char str_2 = \"hello 2\";\n    float input1 = _input1;\n    int input2 = _input2;\n    \n\n    if(a > b){\n        a = 30;\n\n        while(a > b){\n            a = a / 2;\n        }\n    }\n    else{\n        a = a/3;\n    }\n\n    for(i = 0 ; (i+3) < 30; i = i + 1){\n        for(j = 0; j <10; j = j + 1){\n            k = 10;\n            while(k > 1){\n                a = a + i*j/k;\n                k = k - 1;\n            }\n        }\n    }\n\n    return (a*a-a);\n}"}