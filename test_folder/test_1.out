{"body": [["vtype", "int", 3], ["WHITE_SPACE", " ", 4], ["id", "main", 8], ["lparen", "(", 9], ["vtype", "int", 12], ["WHITE_SPACE", " ", 13], ["id", "a", 14], ["rparen", ")", 15], ["lbrace", "{", 16], ["WHITE_SPACE", "\n    ", 21], ["while", "while", 26], ["lparen", "(", 27], ["id", "a", 28], ["WHITE_SPACE", " ", 29], ["comp", "<", 30], ["WHITE_SPACE", " ", 31], ["id", "b", 32], ["rparen", ")", 33], ["lbrace", "{", 34], ["WHITE_SPACE", "\n        ", 43], ["if", "if", 45], ["lparen", "(", 46], ["id", "a", 47], ["WHITE_SPACE", " ", 48], ["comp", "<", 49], ["WHITE_SPACE", " ", 50], ["id", "b", 51], ["rparen", ")", 52], ["lbrace", "{", 53], ["WHITE_SPACE", "\n            ", 66], ["while", "while", 71], ["lparen", "(", 72], ["id", "a", 73], ["WHITE_SPACE", " ", 74], ["comp", "<", 75], ["WHITE_SPACE", " ", 76], ["id", "b", 77], ["rparen", ")", 78], ["lbrace", "{", 79], ["WHITE_SPACE", "\n                ", 96], ["for", "for", 99], ["lparen", "(", 100], ["id", "i", 101], ["WHITE_SPACE", " ", 102], ["assign", "=", 103], ["WHITE_SPACE", " ", 104], ["num", "0", 105], ["semi", ";", 106], ["WHITE_SPACE", " ", 107], ["id", "i", 108], ["WHITE_SPACE", " ", 109], ["comp", "<", 110], ["WHITE_SPACE", " ", 111], ["num", "1", 112], ["semi", ";", 113], ["WHITE_SPACE", " ", 114], ["id", "i", 115], ["WHITE_SPACE", " ", 116], ["assign", "=", 117], ["WHITE_SPACE", " ", 118], ["id", "i", 119], ["WHITE_SPACE", " ", 120], ["addsub", "+", 121], ["WHITE_SPACE", " ", 122], ["num", "1", 123], ["rparen", ")", 124], ["lbrace", "{", 125], ["WHITE_SPACE", "\n                    ", 146], ["while", "while", 151], ["lparen", "(", 152], ["id", "a", 153], ["WHITE_SPACE", " ", 154], ["comp", "<", 155], ["WHITE_SPACE", " ", 156], ["id", "b", 157], ["rparen", ")", 158], ["lbrace", "{", 159], ["WHITE_SPACE", "\n\n                    ", 181], ["rbrace", "}", 182], ["WHITE_SPACE", "\n                ", 199], ["rbrace", "}", 200], ["WHITE_SPACE", "\n            ", 213], ["rbrace", "}", 214], ["WHITE_SPACE", "\n        ", 223], ["rbrace", "}", 224], ["else", "else", 228], ["lbrace", "{", 229], ["WHITE_SPACE", "\n        ", 238], ["rbrace", "}", 239], ["WHITE_SPACE", "\n        ", 248], ["if", "if", 250], ["lparen", "(", 251], ["id", "a", 252], ["WHITE_SPACE", " ", 253], ["comp", "<", 254], ["WHITE_SPACE", " ", 255], ["id", "b", 256], ["rparen", ")", 257], ["lbrace", "{", 258], ["WHITE_SPACE", "\n        ", 267], ["rbrace", "}", 268], ["WHITE_SPACE", "\n    ", 273], ["rbrace", "}", 274], ["WHITE_SPACE", "\n    ", 279], ["return", "return", 285], ["WHITE_SPACE", " ", 286], ["id", "a", 287], ["semi", ";", 288], ["WHITE_SPACE", "\n", 289], ["rbrace", "}", 290]], "original": "int main(int a){\n    while(a < b){\n        if(a < b){\n            while(a < b){\n                for(i = 0; i < 1; i = i + 1){\n                    while(a < b){\n\n                    }\n                }\n            }\n        }else{\n        }\n        if(a < b){\n        }\n    }\n    return a;\n}"}